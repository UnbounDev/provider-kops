apiVersion: kops.crossplane.io/v1alpha1
kind: Cluster
metadata:
  labels:
    kops: xplane-kops
  name: complex-xplane-kops.k8s.local
spec:
  forProvider:
    cluster:
      api:
        loadBalancer:
          class: Network
          subnets:
          - name: ext-0
          - name: ext-1
          - name: ext-2
          type: Public
      assets:
        containerRegistry: us.gcr.io/<YOUR_REGISTRY>
      authorization:
        rbac: {}
      cloudLabels:
        Careers: xplane-kops
      cloudProvider: aws
      clusterAutoscaler:
        enabled: true
      etcdClusters:
      - etcdMembers:
        - encryptedVolume: true
          instanceGroup: ctrl-0
          name: ctrl-0
          volumeSize: 100
          volumeType: gp3
        - encryptedVolume: true
          instanceGroup: ctrl-1
          name: ctrl-1
          volumeSize: 100
          volumeType: gp3
        - encryptedVolume: true
          instanceGroup: ctrl-2
          name: ctrl-2
          volumeSize: 100
          volumeType: gp3
        manager:
          env:
          - name: ETCD_LISTEN_METRICS_URLS
            value: http://0.0.0.0:8081
          - name: ETCD_METRICS
            value: basic
          - name: ETCD_AUTO_COMPACTION_MODE
            value: periodic
          - name: ETCD_AUTO_COMPACTION_RETENTION
            value: "1"
          - name: ETCD_QUOTA_BACKEND_BYTES
            value: "6000000000"
        name: main
      - etcdMembers:
        - encryptedVolume: true
          instanceGroup: ctrl-0
          name: ctrl-0
          volumeSize: 100
          volumeType: gp3
        - encryptedVolume: true
          instanceGroup: ctrl-1
          name: ctrl-1
          volumeSize: 100
          volumeType: gp3
        - encryptedVolume: true
          instanceGroup: ctrl-2
          name: ctrl-2
          volumeSize: 100
          volumeType: gp3
        manager:
          env:
          - name: ETCD_LISTEN_METRICS_URLS
            value: http://0.0.0.0:8082
          - name: ETCD_METRICS
            value: basic
          - name: ETCD_AUTO_COMPACTION_MODE
            value: periodic
          - name: ETCD_AUTO_COMPACTION_RETENTION
            value: "1"
          - name: ETCD_QUOTA_BACKEND_BYTES
            value: "6000000000"
        name: events
      fileAssets:
      - content: |
          apiVersion: audit.k8s.io/v1
          kind: Policy
          rules:
          # A catch-all rule to log all other requests at the Metadata level.
          - level: Metadata
            # Long-running requests like watches that fall under this rule will not
            # generate an audit event in RequestReceived.
            omitStages:
              - "RequestReceived"
        name: apiserver-audit-policy
        path: /srv/kubernetes/kube-apiserver/audit-policy.yaml
        roles:
        - ControlPlane
      - content: |
          apiVersion: v1
          kind: Config
          clusters:
            - name: cluster
              cluster:
                server: http://api.internal.azq-beta-simple-xplane-kops.k8s.local:30007/k8s-audit
          contexts:
            - context:
                cluster: cluster
                user: ""
              name: default-context
          current-context: default-context
          preferences: {}
          users: []
        name: webhook-config
        path: /srv/kubernetes/kube-apiserver/webhook-config.yaml
        roles:
        - ControlPlane
      kubeAPIServer:
        apiAudiences:
        - api
        - istio-ca
        auditLogMaxAge: 10
        auditLogMaxBackups: 1
        auditLogMaxSize: 100
        auditLogPath: /var/log/kubernetes/kube-apiserver-auditlogs.log
        auditPolicyFile: /srv/kubernetes/kube-apiserver/audit-policy.yaml
        auditWebhookBatchMaxWait: 5s
        auditWebhookConfigFile: /srv/kubernetes/kube-apiserver/webhook-config.yaml
        authorizationMode: Node,RBAC
        clientCAFile: /srv/kubernetes/ca.crt
        disableBasicAuth: true
        oidcClientID: yourClientID
        oidcGroupsClaim: groups
        oidcIssuerURL: https://yourOidcIssuerUrl
        oidcUsernameClaim: email
      kubeDNS:
        provider: CoreDNS
      kubeProxy:
        proxyMode: ipvs
      kubelet:
        anonymousAuth: false
      kubernetesVersion: v1.30.1
      networkCIDR: yourVpcNetworkCidr
      networkID: yourVpcId
      networking:
        calico:
          version: v3.28.2
      nonMasqueradeCIDR: 100.64.0.0/10
      sshAccess:
      - 0.0.0.0/0
      subnets:
      - cidr: yourSubnetCidr
        id: yourSubnetId
        name: ext-0
        type: Utility
        zone: yourSubnetRegion
      - cidr: yourSubnetCidr
        id: yourSubnetId
        name: ext-1
        type: Utility
        zone: yourSubnetRegion
      - cidr: yourSubnetCidr
        id: yourSubnetId
        name: ext-2
        type: Utility
        zone: yourSubnetRegion
      - cidr: yourSubnetCidr
        id: yourSubnetId
        name: cluster-0
        type: Private
        zone: yourSubnetRegion
      - cidr: yourSubnetCidr
        id: yourSubnetId
        name: cluster-1
        type: Private
        zone: yourSubnetRegion
      - cidr: yourSubnetCidr
        id: yourSubnetId
        name: cluster-2
        type: Private
        zone: yourSubnetRegion
      topology:
        dns:
          type: Public
    instanceGroups:
    - name: ctrl-0
      spec:
        image: ami-0a0e5d9c7acc336f1
        machineType: m5a.xlarge
        maxSize: 1
        minSize: 1
        role: ControlPlane
        rootVolumeEncryption: true
        rootVolumeSize: 256
        subnets:
        - cluster-0
    - name: ctrl-1
      spec:
        image: ami-0a0e5d9c7acc336f1
        machineType: m5a.xlarge
        maxSize: 1
        minSize: 1
        role: ControlPlane
        rootVolumeEncryption: true
        rootVolumeSize: 256
        subnets:
        - cluster-1
    - name: ctrl-2
      spec:
        image: ami-0a0e5d9c7acc336f1
        machineType: m5a.xlarge
        maxSize: 1
        minSize: 1
        role: ControlPlane
        rootVolumeEncryption: true
        rootVolumeSize: 256
        subnets:
        - cluster-2
    - name: cluster
      spec:
        image: ami-0a0e5d9c7acc336f1
        machineType: m5a.large
        maxSize: 100
        minSize: 1
        role: Node
        rootVolumeEncryption: true
        rootVolumeSize: 100
        subnets:
        - cluster-0
        - cluster-1
        - cluster-2
    keypairs:
    - cert: |
        -----BEGIN CERTIFICATE-----
        yourCert
        -----END CERTIFICATE-----
      keypair: kubernetes-ca
      primary: false
    rollingUpdateOpts:
      cloudOnly: true
      validateCount: 0
    secrets:
    - kind: dockerconfig
      name: dockerconfig
      value:
        secretRef:
          key: .dockerconfigjson
          name: regsecret
          namespace: default
        source: Secret
    state: s3://your-bucket
  providerConfigRef:
    name: aws-write
  writeConnectionSecretToRef:
    name: complex-xplane-kops
    namespace: default
